# 6회차
# (1교시)------------------------------------
# 제어문 :프로그램의 실행 흐름을 제어하는 구문, 조건에 따라 코드 블록을 실행, 반복적으로 코드 블록을 실행
#        어떤 조건에 따라 실행이 분기 되도록 하는 기준이 되는 식
#
# 조건문 : if 조건문(참과 거짓), if 조건문 와 else(참이 아니면 else로 반환), if 조건문 와 elif : + else (추가 조건 부여)
#         조건이 참(True)인 동안 계속 반복, 특정 조건을 만족할 때까지 계속 실행해야하는 경우
#         while(조건) : 조건 + 실행할 코드 + (조건을 변경하는 코드)
#         break : 조건에 부합하면 멈춤
#         continue : 조건에 부합하면 다시 처음부터 다시 실행(while 부터)

# 반복문 : 특정 조건을 만족할 때까지 계속 실행해야 하는 경우, 반복해야할 횟수가 정해져 있거나, 반복해야 할 대상이 명확하게 정의되어 있는 경우
#           for 변수 in 리스트(또는 튜플, 문자열)
#           print(변수)
#           for i in range(2, 10, 2)  (i 변수의 in 안에 range(2, 10, 2)
#           break, continue 사용가능




# 조건문
# num = int(input("숫자를 입력해 주세요"))  #input으로 받는 데이터는 문자로 인식하기 때문에 int를 사용해서 변환시켜야함.
# if num > 0:
#     print("양수입니다.")   # 들여쓰기  : 탭   # 내어쓰기 :슈프트 탭
# else :
#     print("음수입니다.")

    # >>> input(10)  >>> 양수입니다.
    # >>> input(-5)  >>> 음수입니다.


# 스코어 = (input("점수를 입력해 주세요 :"))
# if not 스코어.isdigit(): # if not 만약 아니면 isdigit(숫자)가
#     print("숫자가 아닙니다.")
# else:
#     if int(스코어) >= 90:
#         print("A 입니다.")
#     elif int(스코어) >= 80:
#         print("B 입니다.")
#     elif int(스코어) >= 70:
#         print("C 입니다.")
#     else:
#         print("D 입니다.")

# 스코어 = (input("점수를 입력해 주세요 :"))
# if 스코어.isdigit(): # if not 만약 아니면 isdigit(숫자)가
#     if int(스코어) >= 90:
#         print("A 입니다.")
#     elif int(스코어) >= 80:
#         print("B 입니다.")
#     elif int(스코어) >= 70:
#         print("C 입니다.")
#     else:
#         print("D 입니다.")
# else:
#     print("숫자가 아닙니다.")

# 1교시 문제1
# 숫자를 입력 받고 짝수인지 홀수인지

# num = int(input("점수를 입력해 주세요 :"))
# if num % 2 == 0:
#     print("짝수 입니다.")
# else:
#     print("홀수 입니다.")
#  >>> 점수 입력 : 23  >> 홀수 입니다.
# 풀이
# num = int(input())에 입력 받는 숫자
#       if num % 2 입력 받은 숫자가 짝수라면 나누기 2 했을때 나머지 값이 0,
#                  입력 받는 숫자가 홀수라면 나누기 2 했을때 나머지 값이 1
#       == 0: 0과 같다면 print(짝수),  else 아니라면 print(홀수)


# 문제2
# 나이랑 학생인지 아닌지 두가지 질문
# 성인이면서 학생이면 성인학생입니다.
# 성인 학생이 아닙니다.

# age = int(input("나이를 입력하세요"))
# student = input("학생입니까? (y/n)")
# if age >= 18 and student == "y" :
#     print("성인학생 입니다.")
# else:
#     print("선인학생이 아닙니다.")

# >>> 나이 입력 : 20, 학생입니까? y >>> 성인학생입니다.




#(2교시)---------------------------
#  조건문 : 조건이 참(True)인 동안 계속 반복, 특정 조건을 만족할 때까지 계속 실행해야하는 경우
#         while(조건) : 조건 + 실행할 코드 + (조건을 변경하는 코드)
#         break : 조건에 부합하면 멈춤
#         continue : 조건에 부합하면 다시 처음부터 다시 실행(while 부터)

# 반복문(while)

# <while 사용>
# num = 1
# while num <= 5:           # while 반복해라 num이 5만큼 되도록,
#     print(num)
#     num += 1              # num의 데이터에 1씩 더하라.
#     # >>> 1
#     #     2
#     #     3
#     #     4
#     #     5

# <break 사용>
# num = 1
# while num <= 10:  # while 반복해라 num이 5만큼 되도록,
#     print(num)
# if num == 7:
#     break num += 1 # num의 데이터에 1씩 더하라.

# <continue 사용>
# num = 0
# while num < 10:        # num이 < 10보다 작게
#     num += 1           # 반복적으로 1씩 더해라
#     if num % 3 == 0:   # 반복적으로 만약 num이 3으로 나누면 나머지가 0이라면 (3의 배수)
#         continue       # 조건문이 참이면 3의 배수가 나타나면 다시 재실행 한다.
#
#     print(num) >>>  1       # continue로 인해 3의 배수가 제외된 상태로 출력됨.
#                     2
#                     4
#                     5
#                     7
#                     8
#                     10


# <while을 이용한 구구단 만들기>
# dan = 1
# while dan <= 9:
#     n = 1
#     while n <= 9:
#         print(f"{dan}x{n}={dan*n}")
#         n += 1
#     dan += 1
# >>>  1단~9단까지의  1x1=1 ~ 9x9=81 이 출력

# [문제1]
# 5부터 5의 배수를 50이하까지 조건
# 근데 30일때 멈추도록

# num = 5
# while num <= 50:       # num의 5를 반복시켜라 50이하로
#     print(num)         # num을 출력해라
#     if num == 30:        조건문 : 만약에 num이 30과 같아지면 멈춰라
#         break
#     num += 5           # num을 반복적으로 5씩 더해라
# >>> 5
#     10
#     15
#     20
#     25
#     30

# num = 5
# while num <= 50:             # num의 5를 반복시켜라 50이하로
#     print(num)               # num을 출력해라
#     num += 5                 # num에 반복적으로 5를 더해
#     if num == 30:            # 만약 num이 30과 같아지면 멈춰. 25+5가 되는 순간 30 되면서 멈춤
#         break
#  >>> 5
#      10
#      15
#      20
#      25


# num = 5
# while num <= 50:
#     if num == 30:
#         break
#     num += 5
#     print(num)

# (3교시)------------------------
# 반복문(for)

# fruits = ["사과", "바나나", "체리", "딸기"]
# for fruit_2 in fruits:          # 전역변수는 변수를 지정, for로 만들어진 변수는 지역변수. 지역변수는 전역변수로 사용할수 없다.
#     print(fruit_2)
#     # >>>   사과
#     #       바나나
#     #       체리
#     #       딸기

# score = {"동윤": 80, "종원": 70, "지니": 100}    # 딕셔너리 형태에서의 for
# for key in score:
#     # print(score[key])
#     # >>> 80
#     #     70
#     #     100
#     print(f"{key}의 점수는 {score[key]}")
#     # >>>> 동윤의 점수는 80
#         #  종원의 점수는 70
#         #  지니의 점수는 100

# a_tuple = ("안녕", "하세요", "반갑습니다.")   # 튜플형태에서의 for
# for a in a_tuple:
#     print(a)
# #     >>> 안녕
# #         하세요
# #         반갑습니다.

# a_set = {3, 1, 1, 2, 4, 6, 2}  #  세트형태에서의 for
# for a in a_set:
#     print(a)
# # >>>   1
# #       2
# #       3
# #       4
# #       6

# a_set = {3, 1, 1, 2, 4, 6, 2}  #  세트형태에서의 for
# print(sorted(a_set))             #sorted는 원본을 놔둔 상태에서  for in을 활성화 되고 리스트로 반환된다.
# for a in a_set:
#     print(a)
#     # >>> [1, 2, 3, 4, 6]
#     #       1
#     #       2
#     #       3
#     #       4
#     #       6

# a_set = {"사과", "바나나", "체리", "수박"}  #  세트형태에서의 for
# for a in sorted(a_set):                    #sorted를 이용하면 순서 정렬된 값을 반환 한다.
#     print(a)
#     # >>> 바나나
#     # 사과
#     # 수박
#     # 체리

# word = "python"
# for i in word:
#     print(i)
# # >>> p
# # y
# # t
# # h
# # o
# # n

# for i in range(1, 10):
#     print(i)
#     if i == 5:
#         continue
#         # >>> 1
#         # 2
#         # 3
#         # 4
#         # 5
#         # 6
#         # 7
#         # 8
#         # 9

# for i in range(1, 10):
#     print("1....",i)
#     if i == 5:
#         continue
#     print("2....", i)
# >>> 1.... 1
#     2.... 1
#     1.... 2
#     2.... 2
#     1.... 3
#     2.... 3
#     1.... 4
#     2.... 4
#     1.... 5
#     1.... 6
#     2.... 6
#     1.... 7
#     2.... 7
#     1.... 8
#     2.... 8
#     1.... 9
#     2.... 9

# for i in range(2, 101, 2):
#     print(i)
    # >>>2
    # 4
    # 6
    # 8
    # 10
    # 12
    # 14
    # 16
    # 18
    # 20
    # 22
    # 24
    # 26
    # 28
    # 30
    # 32
    # 34
    # 36
    # 38
    # 40
    # 42
    # 44
    # 46
    # 48
    # 50
    # 52
    # 54
    # 56
    # 58
    # 60
    # 62
    # 64
    # 66
    # 68
    # 70
    # 72
    # 74
    # 76
    # 78
    # 80
    # 82
    # 84
    # 86
    # 88
    # 90
    # 92
    # 94
    # 96
    # 98
    # 100

# 문제1
# 리스트 합 구하기
# total = 0          # 토탈이라는 변수 안에는 0이 있음
# num_list = [10, 20, 40, 60, 80]    # num_list 변수 안에 10, 20, 40, 60, 80
# for num in num_list:               # 넘이라는 새로운 변수 안에 num_list안에 반복적으로 넣는다.
#     total += num                   # 넘 변수에 토탈 0과 반복적으로 들어오는  num_list 를 더하라
#
# print(total)
# # >>> 210

# 문제2
# for을 이용한 구구단 만들기

# for dan in range(1, 10):     #(1, 10) 몇번 반복 할것인가.
#     for n in range(1, 10):
#         print(f"{dan}x{n}={dan*n}")
# # >>> 1x1=1 ~ 9x9=81